name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: shire_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d shire_test -h 127.0.0.1 -p 5432"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    steps:
      - uses: actions/checkout@v4

      - name: Node Setup w/ npm cache
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          check-latest: true
          cache: "npm"
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json
            package-lock.json
          
      - name: Create .env.test from secret
        run: printf "%s" "${{ secrets.ENV_TEST }}" > env.test

      - name: Install backend deps
        if: hashFiles('backend/package-lock.json') != ''
        run: cd backend && npm ci
      
      - name: Run backend tests
        run: ./test.sh backend-only

  frontend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: shire_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d shire_test -h 127.0.0.1 -p 5432"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20
        
    steps:
      - uses: actions/checkout@v4

      - name: Node Setup w/ npm cache
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          check-latest: true
          cache: "npm"
          cache-dependency-path: |
            frontend/package-lock.json
            package-lock.json
        
      - name: Create .env.test from secret
        run: printf "%s" "${{ secrets.ENV_TEST }}" > env.test

      - name: Install frontend deps
        if: hashFiles('frontend/package-lock.json') != ''
        run: cd frontend && npm ci

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: ${{ runner.os }}-playwright-
        
      - name: Install Playwright
        run: cd frontend && npx playwright install

      - name: Run frontend tests
        run: ./test.sh frontend-only
